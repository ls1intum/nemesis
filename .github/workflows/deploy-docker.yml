name: Deploy Docker

on:
  push:
    branches:
      - feat/build-on-push

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: 'https://${{ vars.SERVER_HOST }}'
    steps:
      - name: SSH to VM and Execute Docker-Compose Down
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            docker compose -f docker-compose.prod.yml --env-file=.env.prod down --remove-orphans --rmi all

      - name: checkout
        uses: actions/checkout@v4

      - name: Copy Docker Compose File From Repo to VM Host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "./docker-compose.prod.yml"
          target: /home/${{ vars.VM_USERNAME }}

      - name: SSH to VM and create .env.prod file
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            rm -f .env.prod # Delete if exists
            touch .env.prod 
            echo "INFLUXDB_TOKEN=\"${{ secrets.INFLUXDB_TOKEN }}\"" >> .env
            echo "INFLUXDB_ORG=${{ vars.INFLUXDB_ORG }}" >> .env
            echo "INFLUXDB_BUCKET=${{ vars.INFLUXDB_BUCKET }}" >> .env
            echo "DOCKER_INFLUXDB_INIT_USERNAME=${{ vars.DOCKER_INFLUXDB_INIT_USERNAME }}" >> .env.prod
            echo "DOCKER_INFLUXDB_INIT_PASSWORD=\"${{ secrets.DOCKER_INFLUXDB_INIT_PASSWORD }}\"" >> .env.prod
            echo "REPOSITORY_OWNER=${{ vars.REPOSITORY_OWNER }}" >> .env.prod
            echo "REPOSITORY_NAME=${{ vars.REPOSITORY_NAME }}" >> .env.prod
            echo "GITHUB_TOKEN=${{ secrets.GH_PULL_TOKEN }}" >> .env.prod

      - name: Copy Caddyfile
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "./Caddyfile"
          target: /home/${{ vars.VM_USERNAME }}

      - name: SSH to VM and Execute Docker-Compose Up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VM_HOST }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            docker compose -f docker-compose.prod.yml --env-file=.env.prod up --pull=always -d
